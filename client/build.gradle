plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'pl.edu.pjatk'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation("org.seleniumhq.selenium:selenium-java:4.27.0")

}

def isPageAvailable(String urlString) {
	try {
		def connection = new URL(urlString).openConnection()
		connection.setConnectTimeout(1000)
		connection.setReadTimeout(1000)
		connection.connect()
		return connection instanceof HttpURLConnection && connection.responseCode < 500
	} catch (Exception e) {
		return false
	}
}

tasks.named('test') {
	useJUnitPlatform()
	doFirst {
		def url = 'http://localhost:8091/computer/all'
		def connection = new URL(url).openConnection()
		connection.setRequestMethod("GET")
		def responseCode = connection.getResponseCode()

		if (responseCode != 200) {
			enabled = false
			println "API is not reachable. Skipping tests."
		}

		def available = isPageAvailable('http://localhost:8092/view/all')
		if (!available) {
			println "Page is not available"
			enabled = false
		}
	}

}
